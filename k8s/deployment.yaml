apiVersion: apps/v1
kind: Deployment
metadata:
  name: slaking
  namespace: slaking
  labels:
    app: slaking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slaking
  template:
    metadata:
      labels:
        app: slaking
    spec:
      serviceAccountName: slaking
      containers:
      - name: slaking
        image: slaking:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: CONFIG_PATH
          value: "/app/config/config.json"
        - name: SLACK_TOKEN
          valueFrom:
            secretKeyRef:
              name: slaking-secrets
              key: slack-token
        - name: LOG_LEVEL
          value: "info"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: slaking-config
      securityContext:
        fsGroup: 1000 