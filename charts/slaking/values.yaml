# Default values for slaking
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Image configuration
image:
  repository: slaking
  tag: "latest"
  pullPolicy: IfNotPresent
  registry: ""

# Image pull secrets
imagePullSecrets: []

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC configuration
rbac:
  create: true
  clusterRoleAnnotations: {}
  clusterRoleBindingAnnotations: {}

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Container security context
containerSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Replica count
replicaCount: 1

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Service configuration
service:
  type: ClusterIP
  port: 3000
  metricsPort: 9090
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: slaking.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Configuration
config:
  slack:
    defaultChannel: "#general"
    rateLimit: 1000
    retryAttempts: 3
    retryDelay: 5000
  kubernetes:
    namespaces: []
    watchAllNamespaces: true
    watchInterval: 30000
    logBufferSize: 100
    maxLogLines: 10
    defaultCooldown: 60
  logging:
    level: "info"
    format: "json"
    maxFiles: 5
    maxSize: "10m"
  monitoring:
    metricsPort: 9090
    healthCheckInterval: 30000
    prometheusEnabled: true
  filters:
    defaultLevel: "info"
    defaultPattern: ".*"
    excludePatterns:
      - "health check"
      - "heartbeat"
      - "ping"
  annotations:
    enabled: "slaking.enabled"
    channel: "slaking.channel"
    filters: "slaking.filters"
    level: "slaking.level"
    includeLabels: "slaking.include-labels"
    excludeLabels: "slaking.exclude-labels"
    maxLines: "slaking.max-lines"
    cooldown: "slaking.cooldown"

# Environment variables
env:
  # SLACK_TOKEN: ""
  # SLACK_DEFAULT_CHANNEL: ""
  # SLACK_RATE_LIMIT: ""
  # K8S_NAMESPACES: ""
  # K8S_WATCH_ALL_NAMESPACES: "true"
  # K8S_WATCH_INTERVAL: ""
  # LOG_LEVEL: ""
  # METRICS_PORT: ""
  PORT: "3000"
  NODE_ENV: "production"
  CONFIG_PATH: "/app/config/config.json"

# Secret configuration
secret:
  create: false
  name: ""
  type: Opaque
  data:
    "slack-token": ""

# ConfigMap configuration
configMap:
  create: true
  name: ""

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  port: metrics
  annotations: {}
  labels: {}
  relabelings: []
  metricRelabelings: []

# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: 0

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# NetworkPolicy
networkPolicy:
  enabled: false
  ingressRules: []
  egressRules: []

# Liveness probe
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe
startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 30

# Volume mounts
volumeMounts: []

# Volumes
volumes: []

# Init containers
initContainers: []

# Sidecar containers
sidecars: []

# Lifecycle hooks
lifecycle: {}

# Termination grace period
terminationGracePeriodSeconds: 30

# Host network
hostNetwork: false

# Host PID
hostPID: false

# Host IPC
hostIPC: false

# Share process namespace
shareProcessNamespace: false

# Security context
securityContext: {}

# Priority class name
priorityClassName: ""

# Topology spread constraints
topologySpreadConstraints: []

# Pod security standards
podSecurityStandards:
  enabled: false
  level: "restricted"
  version: "latest"

# Backup configuration
backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: 7
  storage:
    type: "local"
    path: "/backup"

# Monitoring and alerting
monitoring:
  prometheus:
    enabled: true
    path: /metrics
    port: metrics
  grafana:
    enabled: false
    dashboard:
      enabled: false
      name: "slaking"
      namespace: "monitoring"
  alerting:
    enabled: false
    rules: []

# Development and debugging
debug:
  enabled: false
  logLevel: "debug"
  port: 9229 